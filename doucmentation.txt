Documentation for Address Book Project

Project Name: Address Book Manager

by: Srushti Kakkalameli

Date: September 2024

Overview
The Address Book Manager is a C-based console application designed to manage and maintain contact information. It allows users to create, edit, delete, and search for contacts. The application also supports saving and loading contacts from a file to ensure data persistence.

Test Cases
1. Create Contact
Test Case 1.1: Valid Contact Creation

Input:

Name: john
Phone Number: 1234567890
Email: john@.com
Expected Output:

Contact saved successfully.
Test Case 1.2: Invalid Phone Number

Input:

Name: kittu
Phone Number: 80887uhjkb
Email: kittu@.com
Expected Output:

Phone number must contain only digits.
Test Case 1.3: Invalid Email

Input:

Name: kittu
Phone Number: 8088254202
Email: kittu@,com
Expected Output:

Invalid email format.
Test Case 1.4: Duplicate Name

Input:

Name: john
Phone Number: 1234567890
Email: john@.com
Expected Output:

Name already exists.
2. Search Contact
Test Case 2.1: Search by Name

Input:

Search Name: g
Expected Output:

Contact not found.
Test Case 2.2: Search by Phone

Input:

Search Phone: 1234567890
Expected Output:

Contact information displayed.
Test Case 2.3: Search by Email

Input:

Search Email: john@.com
Expected Output:

Contact information displayed.
3. Edit Contact
Test Case 3.1: Edit Phone Number

Input:

Search Phone: 1234567890
New Phone Number: 1234564321
Expected Output:

Phone edited successfully.
Test Case 3.2: Invalid Phone Number

Input:

Search Phone: 1234567890
New Phone Number: hgiy\
Expected Output:

Phone number must be exactly 10 digits.
Test Case 3.3: Edit Name

Input:

Search Name: kittu
New Name: kittuu
Expected Output:

Name edited successfully.
4. Delete Contact
Test Case 4.1: Delete Contact

Input:

Search Name or Email: kittu
Select Contact: 1
Expected Output:

Contact deleted successfully.
Test Case 4.2: No Matches Found

Input:

Search Name or Email: nonexistent
Expected Output:

No matches found.
5. List All Contacts
Test Case 5.1: List Contacts

Expected Output:
List of all saved contacts displayed.
6. Save Contacts
Test Case 6.1: Save Contacts

Input:

Save and Exit
Expected Output:

Saving and Exiting...
Test Case 6.2: Check Persistence

Input:

Close and Reopen Application
Verify Contacts
Expected Output:

Previously saved contacts are displayed.
